namespace ClydeMenu.Engine;

using System.Collections.Generic;

using ClydeMenu.Engine.Menu;
using ClydeMenu.Engine.Rendering;
using HarmonyLib;

using UnityEngine;

// autogenerated
[ClydeChange("Adjusted the themes in settings a bit", ClydeVersion.Release_v1_2)]
public class Storage
{
    internal static Harmony harmony;
    
    public static string CmdBarInput
    {
        get;
        internal set;
    } = "";
    public static bool CmdBarJustShown
    {
        get;
        internal set;
    }
    public static int CmdBarInputID
    {
        get;
        internal set;
    }
    public static List<string> CmdBarHistory
    {
        get;
        internal set;
    } = [];
    public static int CmdBarHistoryIndex
    {
        get;
        internal set;
    }
    public static bool Example_Boolean
    {
        get;
        internal set;
    }
    public static float Example_Slider70
    {
        get;
        internal set;
    } = 0.7f;
    public static int Example_SelectionBox
    {
        get;
        internal set;
    } = 1;

    public static int CHEAT_PLAYERSELECT
    {
        get;
        internal set;
    } = 0;
    public static string CHEAT_PLAYERSELECT_MSGSPOOF
    {
        get;
        internal set;
    } = "hello!";
    public static string CHEAT_NETWORK_HEALTHAMOUNT
    {
        get;
        internal set;
    } = "100";
    public static int CHEAT_Upgrade_Type
    {
        get;
        internal set;
    } = 0;
    public static string CHEAT_Upgrade_Amount
    {
        get;
        internal set;
    } = "13";
    public static ThemeConfig InternalThemeStyle
    {
        get;
        internal set;
    }
    public static int SETTINGS_Theme
    {
        get;
        internal set;
    } = 0;
    public static bool IsBepinExLoaded
    {
        get;
        internal set;
    }
    public static GameObject HotReloadListener
    {
        get;
        internal set;
    }

    public static int DEBUG_ENUM
    {
        get;
        internal set;
    } = 0;
    public static bool DEBUG_BOOLEAN
    {
        get;
        internal set;
    } = false;
    public static string DEBUG_NUMBERFIELD
    {
        get;
        internal set;
    } = "-.1";
    public static int DEBUG_PLAYERSELECT
    {
        get;
        internal set;
    } = 0;
    public static float DEBUG_SLIDER
    {
        get;
        internal set;
    } = 0.7f;
    public static string DEBUG_TEXTFIELD
    {
        get;
        internal set;
    } = "Text here";
    public static int WAYPOINTS_POINT
    {
        get;
        internal set;
    } = 0;
    public static int WAYPOINTS_COLOR
    {
        get;
        internal set;
    } = 0;

    private static int WAYPOINTS_ID = 0;

    public class WaypointInfo
    {
        public Color Color { get; set; }
        public string Label { get; set; }
        public Vector3 Position { get; set; }

        public int GetId() => id;

        private int id;
        public WaypointInfo()
        {
            id = WAYPOINTS_ID++;
        }
    }
    public static List<WaypointInfo> WAYPOINTS_POINTS
    {
        get;
        internal set;
    } = new();
    public static string WAYPOINTS_NAME
    {
        get;
        internal set;
    } = "Waypoint 1";

    public static List<ClydeMonoBehaviour> CompsStorage = new();

    // NOT A SETTING
    internal static Dictionary<string, ThemeConfig> StyleThemes = new()
    {
        { "Dark", new ThemeConfig() },
        { "Light", ThemeConfig.Create( // i dont care for lightmode enough to make it look good
            new Color(0.9f, 0.9f, 0.95f),
            new Color(0.9f, 0.9f, 0.9f),
            new Color(0.5f, 0.4f, 1f),
            new Color(0.3f, 0.3f, 0.4f),
            new Color(0.5f, 0.5f, 0.6f),
            new Color(1f, 1f, 1f),
            new Color(0.95f, 0.95f, 0.95f),
            new Color(0.95f, 0.95f, 0.98f)
        )},
        { "Red", ThemeConfig.Create(
            new Color(0.4f, 0.1f, 0.1f),
            new Color(0.4f, 0.2f, 0.2f),
            new Color(1f, 0.3f, 0.3f),
            new Color(1f, 0.9f, 0.9f),
            new Color(0.9f, 0.7f, 0.7f),
            new Color(0.15f, 0.05f, 0.05f),
            new Color(0.3f, 0.1f, 0.1f),
            new Color(0.2f, 0.1f, 0.1f)
        )},
        { "Blue", ThemeConfig.Create( // bro im losing it this is literallly just bluer version of the default darkmode theme
            new Color(0.1f, 0.1f, 0.3f),
            new Color(0.2f, 0.2f, 0.3f),
            new Color(0.3f, 0.5f, 1f),
            new Color(0.9f, 0.9f, 1f),
            new Color(0.7f, 0.7f, 0.9f),
            new Color(0.05f, 0.05f, 0.15f),
            new Color(0.1f, 0.1f, 0.2f),
            new Color(0.1f, 0.1f, 0.2f)
        )},
        { "Green", ThemeConfig.Create(
            new Color(0.1f, 0.3f, 0.1f),
            new Color(0.2f, 0.3f, 0.2f),
            new Color(0.3f, 0.9f, 0.4f),
            new Color(0.9f, 1f, 0.9f),
            new Color(0.7f, 0.9f, 0.7f),
            new Color(0.05f, 0.15f, 0.05f),
            new Color(0.1f, 0.2f, 0.1f),
            new Color(0.1f, 0.2f, 0.1f)
        )},
        { "Purple", ThemeConfig.Create(
            new Color(0.2f, 0.1f, 0.3f),
            new Color(0.25f, 0.2f, 0.35f),
            new Color(0.6f, 0.3f, 1f),
            new Color(0.95f, 0.9f, 1f),
            new Color(0.85f, 0.8f, 0.95f),
            new Color(0.08f, 0.05f, 0.1f),
            new Color(0.15f, 0.1f, 0.2f),
            new Color(0.12f, 0.08f, 0.18f)
        )}
    };

    public static class Network
    {
        public static bool CanSendPackets
        {
            get;
            internal set;
        } = false;
    }
}
